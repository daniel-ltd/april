-- MySQL Script generated by MySQL Workbench
-- Thu May 19 10:14:28 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema april_dev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema april_dev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `april_dev` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `april_dev` ;

-- -----------------------------------------------------
-- Table `april_dev`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `april_dev`.`users` ;

CREATE TABLE IF NOT EXISTS `april_dev`.`users` (
  `id` BIGINT UNSIGNED NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `inserted_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `april_dev`.`permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `april_dev`.`permissions` ;

CREATE TABLE IF NOT EXISTS `april_dev`.`permissions` (
  `id` BIGINT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `codename` VARCHAR(255) NOT NULL,
  `inserted_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `april_dev`.`groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `april_dev`.`groups` ;

CREATE TABLE IF NOT EXISTS `april_dev`.`groups` (
  `id` BIGINT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `inserted_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `april_dev`.`groups_permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `april_dev`.`groups_permissions` ;

CREATE TABLE IF NOT EXISTS `april_dev`.`groups_permissions` (
  `id` BIGINT UNSIGNED NOT NULL,
  `group_id` BIGINT UNSIGNED NOT NULL,
  `permission_id` BIGINT UNSIGNED NOT NULL,
  `inserted_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_gr_perm_group_id_idx` (`group_id` ASC) VISIBLE,
  INDEX `fk_gr_perm_permission_id_idx` (`permission_id` ASC) VISIBLE,
  CONSTRAINT `fk_gr_perm_group_id`
    FOREIGN KEY (`group_id`)
    REFERENCES `april_dev`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gr_perm_permission_id`
    FOREIGN KEY (`permission_id`)
    REFERENCES `april_dev`.`groups_permissions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `april_dev`.`users_permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `april_dev`.`users_permissions` ;

CREATE TABLE IF NOT EXISTS `april_dev`.`users_permissions` (
  `id` BIGINT UNSIGNED NOT NULL,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `permission_id` BIGINT UNSIGNED NOT NULL,
  `inserted_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_perm_user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_user_perm_permission_id_idx` (`permission_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_perm_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `april_dev`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_perm_permission_id`
    FOREIGN KEY (`permission_id`)
    REFERENCES `april_dev`.`permissions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `april_dev`.`users_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `april_dev`.`users_groups` ;

CREATE TABLE IF NOT EXISTS `april_dev`.`users_groups` (
  `id` BIGINT UNSIGNED NOT NULL,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `group_id` BIGINT UNSIGNED NOT NULL,
  `inserted_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_gr_user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_user_gr_group_id_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_gr_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `april_dev`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_gr_group_id`
    FOREIGN KEY (`group_id`)
    REFERENCES `april_dev`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `april_dev`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `april_dev`;
INSERT INTO `april_dev`.`users` (`id`, `email`, `password`, `inserted_at`, `updated_at`) VALUES (1, 'admin@example.com', '$argon2id$v=19$m=65536,t=8,p=2$D5vZKQ+BEjX6F/NqOkDAPA$p6/irejoOU6H2nM/JqaGHpgJFwzYNNzOwGGZ5C5uoo4', 'Current_timestamp', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `april_dev`.`permissions`
-- -----------------------------------------------------
START TRANSACTION;
USE `april_dev`;
INSERT INTO `april_dev`.`permissions` (`id`, `name`, `codename`, `inserted_at`, `updated_at`) VALUES (DEFAULT, 'Add user', 'add_user', DEFAULT, NULL);
INSERT INTO `april_dev`.`permissions` (`id`, `name`, `codename`, `inserted_at`, `updated_at`) VALUES (DEFAULT, 'View user', 'view_user', DEFAULT, NULL);
INSERT INTO `april_dev`.`permissions` (`id`, `name`, `codename`, `inserted_at`, `updated_at`) VALUES (DEFAULT, 'Change user', 'change_user', DEFAULT, NULL);
INSERT INTO `april_dev`.`permissions` (`id`, `name`, `codename`, `inserted_at`, `updated_at`) VALUES (DEFAULT, 'Delete use', 'delete_user', DEFAULT, NULL);

COMMIT;

